{"version":3,"sources":["app.js","github.js","instagram.js"],"names":["App","plugins","$","Object","keys","forEach","p","run","win","window","scrollState","checkScroll","st","scrollTop","addClass","removeClass","on","TOKEN","USERNAME","github","_this","this","apiUri","repoPath","query","store","localStorage","cache","getItem","JSON","parse","ts","now","Date","getTime","_handleData","data","console","log","s","getJSON","then","r","o","setItem","stringify","fail","err","error","t","empty","sort","a","b","watchers_count","row","name","description","fork","language","stargazers_count","append","ACCESS_TOKEN","USER_ID","instagram","url","done","e","d","link","caption","text","images","low_resolution","width","height","likes","count","comments"],"mappings":"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","file":"app.min.js","sourcesContent":["/* exports App */\n\n(function() {\n  'use strict';\n  let App = {\n    plugins: {}\n  };\n\n  $(() => {\n    Object.keys(App.plugins).forEach(p => {\n      App.plugins[p].run();\n    });\n  });\n\n  let win = $(window);\n  let scrollState = 0;\n  let checkScroll = () => {\n    let st = win.scrollTop();\n\n    if (st > 100) {\n      if (scrollState === 2) {\n        return;\n      }\n\n      scrollState = 2;\n      $('header').addClass('scrolled');\n    }\n    else {\n      if (scrollState === 1) {\n        return;\n      }\n\n      scrollState = 1;\n      $('header').removeClass('scrolled');\n    }\n  };\n\n  win.on('scroll', checkScroll);\n\n  window.App = App;\n\n}());","/* global App $ */\n\n(function() {\n  'use strict';\n\n  const TOKEN = '7a1785a8e3d036cf2174e4b7e80b6f70b3b1faca';\n  const USERNAME = 'poppa';\n\n  App.plugins.github = (new function() {\n    let apiUri = 'https://api.github.com';\n    let repoPath = `/users/${USERNAME}/repos`;\n    let query = `?token=${TOKEN}&auth=oauth&callback=?`;\n    let store = localStorage;\n\n    this.run = () => {\n      let cache = store.getItem('github');\n\n      if (cache) {\n        cache = JSON.parse(cache);\n        let ts = cache.ts/1000;\n        let now = new Date().getTime()/1000;\n        if (now-ts < 60*60*4) { // Four hours\n          this._handleData(cache.data);\n          return;\n        }\n        window.console.log('Old Github cache, renew');\n      }\n\n      let s = apiUri + repoPath + query + '&sort=updated';\n\n      $.getJSON(s)\n      .then((r) => {\n        let o = {\n          ts: new Date().getTime(),\n          data: r\n        };\n\n        store.setItem('github', JSON.stringify(o));\n        this._handleData(r);\n      })\n      .fail((err) => {\n        window.console.error('Fail: ', err);\n      });\n    };\n\n    this._handleData = (data) => {\n      let t = $('#github');\n      t.empty();\n      data.data.sort((a, b) => {\n        return a.watchers_count < b.watchers_count\n          ? 1\n          : a.watchers_count === b.watchers_count\n            ? 0\n            : -1;\n      });\n      data.data.forEach((row) => {\n        let s = `<li class='col-md-4 col-xs-6'>\n          <div class='wrapper'>\n            <h3>${row.name}</h3>\n            <p>${row.description}</p>\n            <div class='meta'>`;\n\n        if (row.fork) {\n          s += '<i class=\"item fa fa-code-fork\"></i>';\n        }\n\n        s += `<span class='item'>${row.language || 'Misc'}</span>`;\n        s += `<span class='item'><i class='fa fa-star'></i> ${row.stargazers_count}</span>`;\n        s += `<span class='item'><i class='fa fa-eye'></i> ${row.watchers_count}</span>`;\n\n        s += '</div></div></li>';\n\n        t.append(s);\n      });\n    };\n  }());\n\n\n}());","/* global App $ localStorage */\n\n(function() {\n  'use strict';\n  const ACCESS_TOKEN  = '40563140.5d854a2.bf2dc58a4abc46478f3be8b43bc1e53b';\n  const USER_ID       = '40563140';\n  const store = localStorage;\n\n  App.plugins.instagram = (new function() {\n    this.run = () => {\n      let cache = store.getItem('instagram');\n\n      if (cache) {\n        cache = JSON.parse(cache);\n        let ts = cache.ts/1000;\n        let now = new Date().getTime()/1000;\n\n        if (now-ts < 600) {\n          this._handleData(cache.data);\n          return;\n        }\n        window.console.log('Old instagram cache, renew');\n      }\n\n      let url = `https://api.instagram.com/v1/users/${USER_ID}/media/recent/` +\n        '?access_token=' + ACCESS_TOKEN +\n        '&count=4' +\n        '&callback=?';\n\n      $.getJSON(url)\n      .done(data => {\n        let o = {\n          ts: new Date().getTime(),\n          data: data\n        };\n        store.setItem('instagram', JSON.stringify(o));\n        this._handleData(data);\n      })\n      .fail((e) => {\n        window.console.error('Error: ', e);\n        let t = $('#instagram li');\n        t.empty().append('<div class=\"notify icon error on-dark\">Unable to connect to Instagram!</div>');\n      });\n    };\n\n    this._handleData = d => {\n      let t = $('#instagram');\n      t.empty();\n      d.data.forEach(row => {\n        let s = `<li class=\"col-md-3 col-xs-6\">\n            <a href=\"${row.link}\" target=\"ig\">\n              <span class=\"overlay top\">${row.caption.text}</span>\n              <img src=\"${row.images.low_resolution.url}\"\n                   width=\"${row.images.low_resolution.width}\"\n                   height=\"${row.images.low_resolution.height}\">\n              <span class=\"ig-overlay\">\n                <i class=\"fa fa-instagram\"></i>\n                <span>View on Instagram</span>\n              </span>\n              <span class=\"overlay bottom\">\n                <span class=\"likes\"><i class=\"fa fa-thumbs-up\"></i> ${row.likes.count}</span>\n                <span class=\"comments\"><i class=\"fa fa-comments\"></i> ${row.comments.count}</span>\n              </span>\n            </a>\n          </li>`;\n\n        t.append(s);\n      });\n    };\n  }());\n}());\n"],"sourceRoot":"/source/"}